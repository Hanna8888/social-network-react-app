{"version":3,"file":"static/js/257.b0ab4ebc.chunk.js","mappings":"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","sources":["state/users/api.js","state/users/actions.js","webpack://social-network/./src/components/Paginator/styles.module.css?d938","components/Paginator/Paginator.jsx","webpack://social-network/./src/components/Users/Item/Item.module.css?84fd","components/Users/Item/Item.jsx","webpack://social-network/./src/components/Users/Users.module.css?b9d0","components/Users/Users.jsx"],"sourcesContent":["// api\nimport { instanceAxios } from '../../utils/api';\nimport { profileAPI } from '../profile/api';\n\n// constants\nimport { STYLE_CONSOLE } from '../../constants/constants';\n\nexport const usersAPI = {\n    async getUsers(currentPage, pageSize) {\n        const response = await instanceAxios.get(`users?page=${currentPage}&count=${pageSize}`);\n\n        return response.data;\n    },\n\n    async addFriend(id) {\n         const response = await instanceAxios.post(`follow/${id}`);\n\n         return response.data;\n    },\n\n    async deleteFriend(id) {\n        const response = await instanceAxios.delete(`follow/${id}`);\n\n        return response.data;\n    },\n\n    async getProfile(userId) {\n        console.log('%cObsolete method! Please use profileAPI', STYLE_CONSOLE);\n        const response = await profileAPI.getProfile(userId);\n        return response.data;\n    }\n}\n\n","// api\nimport { usersAPI } from './api';\n\n// types\nimport types from './types';\n\nexport function acceptAddFriend(userId) {\n    return {\n        type: types.ADD_FRIEND,\n        userId\n    }\n}\n\nexport function acceptDeleteFriend(userId) {\n    return {\n        type: types.DELETE_FRIEND,\n        userId\n    }\n}\n\nexport function setUsers(users) {\n    return {\n        type: types.SET_USERS,\n        users\n    }\n}\n\nexport function setCurrentPage(currentPage) {\n    return {\n        type: types.SET_CURRENT_PAGE,\n        currentPage\n    }\n}\n\nexport function setTotalCount(totalCount) {\n    return {\n        type: types.SET_TOTAL_COUNT,\n        totalCount\n    }\n}\n\nexport function setToggleIsFetching(isFetching) {\n    return {\n        type: types.TOGGLE_IS_FETCHING,\n        isFetching\n    }\n}\n\nexport function setWaitIsSubscribe(isFetching, userId) {\n    return {\n        type: types.TOGGLE_IS_WAIT_SUBSCRIBE,\n        isFetching,\n        userId\n    }\n}\n\nexport function getUsersThunk(currentPage, pageSize) {\n    return async dispatch => {\n        try {\n            const response = await usersAPI.getUsers(currentPage, pageSize);\n\n            dispatch(setToggleIsFetching(false));\n            dispatch(setUsers(response.items));\n            dispatch(setTotalCount(response.totalCount));\n            dispatch(setCurrentPage(currentPage));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function deleteFriendThunk(userId) {\n    return async dispatch => {\n        try {\n            dispatch(setWaitIsSubscribe(true, userId));\n            const response = await usersAPI.deleteFriend(userId);\n            if (response.resultCode === 0) {\n                dispatch(acceptDeleteFriend(userId));\n            }\n            dispatch(setWaitIsSubscribe(false, userId));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function addFriendThunk(userId) {\n    return async dispatch => {\n        try {\n            dispatch(setWaitIsSubscribe(true, userId))\n            const response = await usersAPI.addFriend(userId);\n\n            if (response.resultCode === 0) {\n                dispatch(acceptAddFriend(userId))\n            }\n            dispatch(setWaitIsSubscribe(false, userId))\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"styles_Root__SWqGI\",\"Root__item\":\"styles_Root__item__29qU0\",\"Root__item_selected\":\"styles_Root__item_selected__XsGM0\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\n\n// actions\nimport { getUsersThunk } from '../../state/users/actions';\n\nimport styles from './styles.module.css';\n\nfunction Paginator({ className, totalCount, pageSize, currentPage, portionSize }) {\n    const dispatch = useDispatch();\n    const [portionNumber, setPortionNumber] = useState(1);\n\n    const onPageChanged = (pageNumber) => {\n        dispatch(getUsersThunk(pageNumber, pageSize));\n    }\n\n    const pageCount = Math.ceil(totalCount / pageSize);\n\n    const pages = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i);\n    }\n\n    const portionCount = Math.ceil(pageCount / portionSize);\n    const leftMostElemPortion = (portionNumber - 1) * portionSize; // Крайний Левый элемент в порции пагинации\n    const rightMostElemPortion = portionNumber * portionSize; // Крайний Правый элемент в порции пагинации\n\n    return (\n        <ul className={cn(styles.Root, className)}>\n            {portionNumber > 1 && (\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>\n            )}\n\n            {\n                pages.filter(p => {\n                    return p >= leftMostElemPortion && p <= rightMostElemPortion\n                }).map((p, id) => {\n                    return (\n                        <li key={id}\n                            className={cn({[styles.Root__item_selected]: currentPage === p }, styles.Root__item )}\n                            onClick={() => {onPageChanged(p)}}>\n                            {p}\n                        </li>\n                    )\n                })\n            }\n\n            {portionNumber < portionCount && (\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\n            )}\n        </ul>\n    )\n}\n\nPaginator.propTypes = {\n    className: PropTypes.string,\n    totalCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    portionSize: PropTypes.number.isRequired,\n}\n\nPaginator.defaultProps = {\n    className: '',\n    portionSize: 10,\n}\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"Item_Root__m0vom\",\"img\":\"Item_img__3uGUm\",\"button\":\"Item_button__-VqCU\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\n// actions\nimport {\n    deleteFriendThunk,\n    addFriendThunk,\n} from '../../../state/users/actions';\n\n// pic\nimport userPhoto from '../../../assets/images/user.png';\n\nimport styles from './Item.module.css';\n\nfunction Item({ className, userid, photos, status, name, followed, subscribersList }) {\n    const dispatch = useDispatch();\n\n    return (\n        <li key={userid} className={cn(styles.Root, className)}>\n            <NavLink to={\"/profile/\" + userid}>\n                <img src={photos.large ? photos.large : userPhoto} className={styles.img} alt=\"\" />\n                <span>{status}</span>\n                <br/>\n                <span>{name}</span>\n            </NavLink>\n\n            <div>\n                {\n                    followed ?\n                        <button\n                            disabled={subscribersList.some(id => id === userid)}\n                            className={styles.button}\n                            onClick={() => {\n                                dispatch(deleteFriendThunk(userid))\n                            }}>\n                            delete friend\n            </button>\n                        :\n                        <button\n                            disabled={subscribersList.some(id => id === userid)}\n                            className={styles.button} onClick={() => {\n                                dispatch(addFriendThunk(userid))\n                            }}>\n                            add friend\n            </button>\n                }\n            </div>\n        </li>\n    )\n}\n\nItem.propTypes = {\n    className: PropTypes.string,\n    userid: PropTypes.number.isRequired,\n}\n\nItem.defaultProps = {\n    className: '',\n}\n\nexport default Item;\n","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__aDvLq\",\"user__list\":\"Users_user__list__boRgM\"};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// actions\nimport {\n    getUsersThunk,\n} from '../../state/users/actions';\n\n// components\nimport Preloader from '../common/Preloader/Preloader';\nimport Paginator from '../Paginator';\nimport Item from './Item';\n\nimport styles from './Users.module.css';\n\nfunction Users() {\n    const dispatch = useDispatch();\n    const pageSize = useSelector(state => state.users.pageSize);\n    const currentPage = useSelector(state => state.users.currentPage);\n    const users = useSelector(state => state.users.users);\n    const totalCount = useSelector(state => state.users.totalCount);\n    const isFetching = useSelector(state => state.users.isFetching);\n    const subscribersList = useSelector(state => state.users.subscribersList);\n\n    useEffect(() => {\n        dispatch(getUsersThunk(currentPage, pageSize));\n    }, [currentPage, dispatch, pageSize])\n\n    if (isFetching) {\n        return <Preloader />\n    }\n\n    return (\n        <div className={styles.users}>\n            <Paginator totalCount={totalCount} pageSize={pageSize} currentPage={currentPage} />\n\n            <ul className={styles.user__list}>\n                {\n                    users.map((u, index) => {\n                        return <Item\n                                    key={index}\n                                    userid={u.id}\n                                    photos={u.photos}\n                                    status={u.status}\n                                    name={u.name}\n                                    followed={u.followed}\n                                    subscribersList={subscribersList}\n                                />\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Users;\n"],"names":["usersAPI","currentPage","pageSize","instanceAxios","response","data","id","acceptAddFriend","userId","type","types","acceptDeleteFriend","setCurrentPage","setWaitIsSubscribe","isFetching","getUsersThunk","dispatch","users","items","totalCount","Error","Paginator","className","portionSize","useDispatch","useState","portionNumber","setPortionNumber","pageCount","Math","ceil","pages","i","push","portionCount","leftMostElemPortion","rightMostElemPortion","cn","styles","onClick","filter","p","map","defaultProps","Item","userid","photos","status","name","followed","subscribersList","to","src","large","userPhoto","alt","disabled","some","resultCode","useSelector","state","useEffect","Preloader","u","index"],"sourceRoot":""}